// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package org.owntracks.android.ui.base;

import android.databinding.ViewDataBinding;
import dagger.MembersInjector;
import javax.inject.Provider;
import org.greenrobot.eventbus.EventBus;
import org.owntracks.android.ui.base.navigator.Navigator;
import org.owntracks.android.ui.base.viewmodel.MvvmViewModel;

public final class BaseActivity_MembersInjector<B extends ViewDataBinding, V extends MvvmViewModel>
    implements MembersInjector<BaseActivity<B, V>> {
  private final Provider<V> viewModelProvider;

  private final Provider<EventBus> eventBusProvider;

  private final Provider<Navigator> navigatorProvider;

  public BaseActivity_MembersInjector(
      Provider<V> viewModelProvider,
      Provider<EventBus> eventBusProvider,
      Provider<Navigator> navigatorProvider) {
    assert viewModelProvider != null;
    this.viewModelProvider = viewModelProvider;
    assert eventBusProvider != null;
    this.eventBusProvider = eventBusProvider;
    assert navigatorProvider != null;
    this.navigatorProvider = navigatorProvider;
  }

  public static <B extends ViewDataBinding, V extends MvvmViewModel>
      MembersInjector<BaseActivity<B, V>> create(
          Provider<V> viewModelProvider,
          Provider<EventBus> eventBusProvider,
          Provider<Navigator> navigatorProvider) {
    return new BaseActivity_MembersInjector<B, V>(
        viewModelProvider, eventBusProvider, navigatorProvider);
  }

  @Override
  public void injectMembers(BaseActivity<B, V> instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.viewModel = viewModelProvider.get();
    instance.eventBus = eventBusProvider.get();
    instance.navigator = navigatorProvider;
  }

  public static <B extends ViewDataBinding, V extends MvvmViewModel> void injectViewModel(
      BaseActivity<B, V> instance, Provider<V> viewModelProvider) {
    instance.viewModel = viewModelProvider.get();
  }

  public static <B extends ViewDataBinding, V extends MvvmViewModel> void injectEventBus(
      BaseActivity<B, V> instance, Provider<EventBus> eventBusProvider) {
    instance.eventBus = eventBusProvider.get();
  }

  public static <B extends ViewDataBinding, V extends MvvmViewModel> void injectNavigator(
      BaseActivity<B, V> instance, Provider<Navigator> navigator) {
    instance.navigator = navigator;
  }
}
