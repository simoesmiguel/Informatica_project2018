// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package org.owntracks.android.ui.load;

import android.content.Context;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class LoadViewModel_Factory implements Factory<LoadViewModel> {
  private final MembersInjector<LoadViewModel> loadViewModelMembersInjector;

  private final Provider<Context> contextProvider;

  public LoadViewModel_Factory(
      MembersInjector<LoadViewModel> loadViewModelMembersInjector,
      Provider<Context> contextProvider) {
    assert loadViewModelMembersInjector != null;
    this.loadViewModelMembersInjector = loadViewModelMembersInjector;
    assert contextProvider != null;
    this.contextProvider = contextProvider;
  }

  @Override
  public LoadViewModel get() {
    return MembersInjectors.injectMembers(
        loadViewModelMembersInjector, new LoadViewModel(contextProvider.get()));
  }

  public static Factory<LoadViewModel> create(
      MembersInjector<LoadViewModel> loadViewModelMembersInjector,
      Provider<Context> contextProvider) {
    return new LoadViewModel_Factory(loadViewModelMembersInjector, contextProvider);
  }
}
